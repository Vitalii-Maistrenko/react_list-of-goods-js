{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","initialState","sortedGoods","showResetButton","useState","state","setState","sortByAlphabeticallyActive","sortByLengthActive","reverseActive","updateState","updatedState","prevState","sortArray","sortFunction","activeSort","sortedArray","sort","setActiveState","resetArray","generateButtonClass","isActive","className","type","onClick","a","b","localeCompare","length","reversedArray","reverse","reverseArray","map","item","ReactDOM","render","document","getElementById"],"mappings":"wOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,IAAMC,EAAe,CACnBC,YAAY,GAAD,OAAMH,GACjBI,iBAAiB,GAGnB,EAA0BC,mBAASH,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEEJ,EAKEG,EALFH,YACAC,EAIEE,EAJFF,gBACAI,EAGEF,EAHFE,2BACAC,EAEEH,EAFFG,mBACAC,EACEJ,EADFI,cASIC,EAAc,SAACC,GACnBL,GAAS,SAAAM,GAAS,kCACbA,GACAD,OAIDE,EAAY,SAACC,EAAcC,GAC/B,IAAMC,EAAc,YAAId,GAAae,KAAKH,GAE1CJ,EAAY,aACVR,YAAac,EACbb,iBAAiB,GAlBE,SAAAY,GAAU,MAAK,CACpCR,2BAA2C,iBAAfQ,EAC5BP,mBAAmC,WAAfO,EACpBN,cAA8B,YAAfM,GAgBVG,CAAeH,MAahBI,EAAa,WACjBb,EAASL,IAmBLmB,EAAsB,SAAAC,GAAQ,uBAAcA,EAAW,GAAK,aAElE,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,UAAKF,EAAoBb,GAAzB,YACTiB,QAxBmB,WACzBX,GAAU,SAACY,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,KAAI,iBAoBpC,iCAOA,wBACEH,KAAK,SACLD,UAAS,UAAKF,EAAoBZ,GAAzB,eACTgB,QA3Ba,WACnBX,GAAU,SAACY,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,SAAQ,WAuBrC,4BAOA,wBACEL,KAAK,SACLD,UAAS,UAAKF,EAAoBX,GAAzB,eACTe,QA9Bc,WAChBf,EACFU,IAvBiB,WACnB,IAAMU,EAAgB,YAAI3B,GAAa4B,UAEvCpB,EAAY,CACVR,YAAa2B,EACbpB,eAAgBA,IAoBhBsB,IAuBE,qBAOC5B,GACC,wBACEoB,KAAK,SACLD,UAAU,mBACVE,QAASL,EAHX,sBASJ,6BACGjB,EAAY8B,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCvHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9e81373.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const initialState = {\n    sortedGoods: [...goodsFromServer],\n    showResetButton: false,\n  };\n\n  const [state, setState] = useState(initialState);\n  const {\n    sortedGoods,\n    showResetButton,\n    sortByAlphabeticallyActive,\n    sortByLengthActive,\n    reverseActive,\n  } = state;\n\n  const setActiveState = activeSort => ({\n    sortByAlphabeticallyActive: activeSort === 'alphabetical',\n    sortByLengthActive: activeSort === 'length',\n    reverseActive: activeSort === 'reverse',\n  });\n\n  const updateState = (updatedState) => {\n    setState(prevState => ({\n      ...prevState,\n      ...updatedState,\n    }));\n  };\n\n  const sortArray = (sortFunction, activeSort) => {\n    const sortedArray = [...sortedGoods].sort(sortFunction);\n\n    updateState({\n      sortedGoods: sortedArray,\n      showResetButton: true,\n      ...setActiveState(activeSort),\n    });\n  };\n\n  const reverseArray = () => {\n    const reversedArray = [...sortedGoods].reverse();\n\n    updateState({\n      sortedGoods: reversedArray,\n      reverseActive: !reverseActive,\n    });\n  };\n\n  const resetArray = () => {\n    setState(initialState);\n  };\n\n  const sortAlphabetically = () => {\n    sortArray((a, b) => a.localeCompare(b), 'alphabetical');\n  };\n\n  const sortByLength = () => {\n    sortArray((a, b) => a.length - b.length, 'length');\n  };\n\n  const handleReverse = () => {\n    if (reverseActive) {\n      resetArray();\n    } else {\n      reverseArray();\n    }\n  };\n\n  const generateButtonClass = isActive => `button ${isActive ? '' : 'is-light'}`;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`${generateButtonClass(sortByAlphabeticallyActive)} is-info`}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={`${generateButtonClass(sortByLengthActive)} is-success`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={`${generateButtonClass(reverseActive)} is-warning`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n        {showResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={resetArray}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortedGoods.map(item => (\n          <li key={item} data-cy=\"Good\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}